create table "public"."player" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text
);


alter table "public"."player" enable row level security;

create table "public"."pokemon" (
    "Number" bigint not null,
    "Name" text,
    "generation" bigint,
    "image_url" text,
    "formatted_name" text
);


alter table "public"."pokemon" enable row level security;

create table "public"."result" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "player_id" bigint,
    "deck_archetype_1" bigint,
    "deck_archetype_2" bigint,
    "week_start" date,
    "wins" integer,
    "losses" integer,
    "ties" integer
);


alter table "public"."result" enable row level security;

CREATE UNIQUE INDEX player_pkey ON public.player USING btree (id);

CREATE UNIQUE INDEX pokemon_pkey ON public.pokemon USING btree ("Number");

CREATE UNIQUE INDEX result_pkey ON public.result USING btree (id);

alter table "public"."player" add constraint "player_pkey" PRIMARY KEY using index "player_pkey";

alter table "public"."pokemon" add constraint "pokemon_pkey" PRIMARY KEY using index "pokemon_pkey";

alter table "public"."result" add constraint "result_pkey" PRIMARY KEY using index "result_pkey";

alter table "public"."result" add constraint "result_deck_archetype_1_fkey" FOREIGN KEY (deck_archetype_1) REFERENCES pokemon("Number") ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."result" validate constraint "result_deck_archetype_1_fkey";

alter table "public"."result" add constraint "result_deck_archetype_2_fkey" FOREIGN KEY (deck_archetype_2) REFERENCES pokemon("Number") ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."result" validate constraint "result_deck_archetype_2_fkey";

alter table "public"."result" add constraint "result_player_id_fkey" FOREIGN KEY (player_id) REFERENCES player(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."result" validate constraint "result_player_id_fkey";

grant delete on table "public"."player" to "anon";

grant insert on table "public"."player" to "anon";

grant references on table "public"."player" to "anon";

grant select on table "public"."player" to "anon";

grant trigger on table "public"."player" to "anon";

grant truncate on table "public"."player" to "anon";

grant update on table "public"."player" to "anon";

grant delete on table "public"."player" to "authenticated";

grant insert on table "public"."player" to "authenticated";

grant references on table "public"."player" to "authenticated";

grant select on table "public"."player" to "authenticated";

grant trigger on table "public"."player" to "authenticated";

grant truncate on table "public"."player" to "authenticated";

grant update on table "public"."player" to "authenticated";

grant delete on table "public"."player" to "service_role";

grant insert on table "public"."player" to "service_role";

grant references on table "public"."player" to "service_role";

grant select on table "public"."player" to "service_role";

grant trigger on table "public"."player" to "service_role";

grant truncate on table "public"."player" to "service_role";

grant update on table "public"."player" to "service_role";

grant delete on table "public"."pokemon" to "anon";

grant insert on table "public"."pokemon" to "anon";

grant references on table "public"."pokemon" to "anon";

grant select on table "public"."pokemon" to "anon";

grant trigger on table "public"."pokemon" to "anon";

grant truncate on table "public"."pokemon" to "anon";

grant update on table "public"."pokemon" to "anon";

grant delete on table "public"."pokemon" to "authenticated";

grant insert on table "public"."pokemon" to "authenticated";

grant references on table "public"."pokemon" to "authenticated";

grant select on table "public"."pokemon" to "authenticated";

grant trigger on table "public"."pokemon" to "authenticated";

grant truncate on table "public"."pokemon" to "authenticated";

grant update on table "public"."pokemon" to "authenticated";

grant delete on table "public"."pokemon" to "service_role";

grant insert on table "public"."pokemon" to "service_role";

grant references on table "public"."pokemon" to "service_role";

grant select on table "public"."pokemon" to "service_role";

grant trigger on table "public"."pokemon" to "service_role";

grant truncate on table "public"."pokemon" to "service_role";

grant update on table "public"."pokemon" to "service_role";

grant delete on table "public"."result" to "anon";

grant insert on table "public"."result" to "anon";

grant references on table "public"."result" to "anon";

grant select on table "public"."result" to "anon";

grant trigger on table "public"."result" to "anon";

grant truncate on table "public"."result" to "anon";

grant update on table "public"."result" to "anon";

grant delete on table "public"."result" to "authenticated";

grant insert on table "public"."result" to "authenticated";

grant references on table "public"."result" to "authenticated";

grant select on table "public"."result" to "authenticated";

grant trigger on table "public"."result" to "authenticated";

grant truncate on table "public"."result" to "authenticated";

grant update on table "public"."result" to "authenticated";

grant delete on table "public"."result" to "service_role";

grant insert on table "public"."result" to "service_role";

grant references on table "public"."result" to "service_role";

grant select on table "public"."result" to "service_role";

grant trigger on table "public"."result" to "service_role";

grant truncate on table "public"."result" to "service_role";

grant update on table "public"."result" to "service_role";

create policy "Enable read access for all users"
on "public"."player"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."pokemon"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."result"
as permissive
for select
to public
using (true);



